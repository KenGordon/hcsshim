{{!
based on:
https://github.com/swagger-api/swagger-codegen/blob/v2.4.32/modules/swagger-codegen/src/main/resources/go/partial_header.mustache

file format documentation:
http://mustache.github.io/mustache.5.html
}}// Autogenerated code; DO NOT EDIT.

{{>partial_header}}
package {{packageName}}
{{#models}}{{#imports}}
import ({{/imports}}{{#imports}}
	"{{import}}"{{/imports}}{{#imports}}
)
{{/imports}}{{#model}}{{#isEnum}}{{#description}}// {{{classname}}} : {{{description}}}{{/description}}
type {{{classname}}} {{^format}}{{dataType}}{{/format}}{{#format}}{{{format}}}{{/format}}

// List of {{{name}}}
const (
	{{#allowableValues}}
	{{#enumVars}}
	{{{classname}}}_{{name}} {{{classname}}} = {{{value}}}
	{{/enumVars}}
	{{/allowableValues}}
){{/isEnum}}{{^isEnum}}{{#description}}
// {{{description}}}{{/description}}
type {{classname}} struct {
{{#vars}}
{{^-first}}
{{/-first}}
{{#description}}
	// {{{description}}}
{{/description}}
	{{name}} {{!
		for non-primitive, non-enum types, use a pointer so `omitempty` is processed correctly
	}}{{^isEnum}}{{^isPrimitiveType}}{{^isContainer}}{{^isDateTime}}*{{/isDateTime}}{{/isContainer}}{{/isPrimitiveType}}{{/isEnum}}{{!
		if the type is numeric, and has a defined data format (eg, uint16), use that
	}}{{#isNumeric}}{{^dataFormat}}{{{datatype}}}{{/dataFormat}}{{#dataFormat}}{{{dataFormat}}}{{/dataFormat}}{{/isNumeric}}{{!
		otherwise, just use the data type
	}}{{^isNumeric}}{{{datatype}}}{{/isNumeric}} {{!
		struct tags
	}}`json:"{{baseName}}{{^required}},omitempty{{/required}}"{{#withXml}} xml:"{{baseName}}"{{/withXml}}`
{{/vars}}
}{{/isEnum}}{{/model}}{{/models}}
